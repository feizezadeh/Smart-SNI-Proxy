upstream dohloop {
    zone dohloop 64k;
    server 127.0.0.1:8080;
    keepalive 32;
}

server {
    server_name <YOUR_HOST>;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # DoH endpoint
    location /dns-query {
        proxy_pass http://dohloop;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Increase timeouts for DNS queries
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        # Disable buffering for real-time response
        proxy_buffering off;
        proxy_request_buffering off;

        # Cache configuration
        proxy_cache_methods GET POST;
        proxy_cache_valid 200 5m;
        proxy_cache_key "$request_method$request_body";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://dohloop;
        proxy_http_version 1.1;
        access_log off;
    }

    # Metrics endpoint (optional - protect with auth if needed)
    location /metrics {
        proxy_pass http://dohloop;
        proxy_http_version 1.1;
        # Uncomment to restrict access
        # allow 127.0.0.1;
        # deny all;
    }

    location /metrics/prometheus {
        proxy_pass http://dohloop;
        proxy_http_version 1.1;
        # Uncomment to restrict access
        # allow 127.0.0.1;
        # deny all;
    }

    # Admin reload endpoint (protected)
    location /admin/reload {
        proxy_pass http://dohloop;
        proxy_http_version 1.1;
        # Restrict to localhost only
        allow 127.0.0.1;
        deny all;
    }

    # Default - return 404
    location / {
        return 404 "404 Not Found\n";
    }

    listen 8443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/<YOUR_HOST>/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/<YOUR_HOST>/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Additional SSL hardening
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
}


server {
    listen 80 default_server;
    server_name _;

    if ($host = "<YOUR_HOST>") {
        return 301 https://$host$request_uri;
    }

    location / {
      resolver 8.8.8.8;

      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_buffering         off;
      proxy_request_buffering off;
      proxy_pass          http://$host:80;
    }
}